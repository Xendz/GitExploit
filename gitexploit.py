#!/usr/bin/Python

import random,time,sys,os,re
#from BeautifulSoup import BeautifulSoup as Soup
import requests
import urllib2
import threading
import time
#use json
import json
#Option Parser
from optparse import OptionParser
####
#Helpful Notes
##https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc
####
##########################################################################################
# 1) Search github and get a list of all projects
# 2) grab github projects
# 3) search for all files in github projects
# 4) run regular expression for vulnerbilities based on which you specify
# 5) report layout in Project link -> project file -> Highlighted code with 2 lines before 
#	 and 2 lines after
# 6) add a multiple exporting options
##########################################################################################



class Scanner:

    """ the main class """

    def __init__(self, query):
		
        self.url      = "https://api.github.com/search/repositories?q={}".format( query )
        self.data     = urllib2.urlopen( self.url ).read()
        self.response = json.loads( self.data )

    def get_count( self ):

        print self.response["total_count"]

    def get_urls( self ):

        self.item_count = len( self.response["items"] )
        
        for i in range( 0, self.item_count ):

            print self.response["items"][i]["url"]


if __name__ == '__main__':

	banner = """
  ____ _ _   _____            _       _ _   
 / ___(_) |_| ____|_  ___ __ | | ___ (_) |_ 
| |  _| | __|  _| \ \/ / '_ \| |/ _ \| | __|
| |_| | | |_| |___ >  <| |_) | | (_) | | |_ 
 \____|_|\__|_____/_/\_\ .__/|_|\___/|_|\__|
                       |_|                  
\n"""
"""Usage Optionparsers"""
options = OptionParser(usage='%prog server [options]', description='GitExploit')
options.add_option('-s', '--search', type='str', default='tetris', help='GitExplorer Search Query')
options.add_option('-x', '--xss', type='str', default='tetris', help='GitExplorer Search Query')
options.add_option('-l', '--lfi', type='str', default='tetris', help='GitExplorer Search Query')
options.add_option('-r', '--rfi', type='str', default='tetris', help='GitExplorer Search Query')

opts, args = options.parse_args()
print banner

#Run
b = Scanner(opts.search)
b.get_urls()
